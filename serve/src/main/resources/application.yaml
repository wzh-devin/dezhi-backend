server:
  port: 8080

spring:
  profiles:
    active: dev
  application:
    name: dezhi-blog

  # 配置数据源
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${dezhi.postgresql.host}:${dezhi.postgresql.port}/${dezhi.postgresql.database}?currentSchema=${dezhi.postgresql.schema}
    username: ${dezhi.postgresql.username}
    password: ${dezhi.postgresql.password}

  # 配置 redis
  data:
    redis:
      database: ${dezhi.redis.database}
      host: ${dezhi.redis.host}
      port: ${dezhi.redis.port}
      password: ${dezhi.redis.password}
      timeout: 3000

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: ${dezhi.sa-token.token-name}
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: ${dezhi.sa-token.timeout}
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: ${dezhi.sa-token.active-timeout}
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: ${dezhi.sa-token.is-concurrent}
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: ${dezhi.sa-token.is-share}
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: ${dezhi.sa-token.token-style}
  # 是否输出操作日志
  is-log: true

# swagger 配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: 'dezhi-blog-base'
      paths-to-match: '/**'
      packages-to-scan: com.devin.dezhi.controller

# mybatis-plus 配置
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl

# 日志配置
logging:
  config: classpath:logback-spring.xml

dezhi:
  # 配置加密密钥
  secret-key: ${dezhi.secret-key}